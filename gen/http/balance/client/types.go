// Code generated by goa v3.22.1, DO NOT EDIT.
//
// balance HTTP client types
//
// Command:
// $ goa gen stock-bot/design

package client

import (
	balanceviews "stock-bot/gen/balance/views"
)

// SummaryResponseBody is the type of the "balance" service "summary" endpoint
// HTTP response body.
type SummaryResponseBody struct {
	// 総資産 (円)
	TotalAssets *float64 `form:"total_assets,omitempty" json:"total_assets,omitempty" xml:"total_assets,omitempty"`
	// 現物買付可能額 (円)
	CashBuyingPower *float64 `form:"cash_buying_power,omitempty" json:"cash_buying_power,omitempty" xml:"cash_buying_power,omitempty"`
	// 信用新規建可能額 (円)
	MarginBuyingPower *float64 `form:"margin_buying_power,omitempty" json:"margin_buying_power,omitempty" xml:"margin_buying_power,omitempty"`
	// 出金可能額 (円)
	WithdrawalPossibleAmount *float64 `form:"withdrawal_possible_amount,omitempty" json:"withdrawal_possible_amount,omitempty" xml:"withdrawal_possible_amount,omitempty"`
	// 委託保証金率 (%)
	MarginRate *float64 `form:"margin_rate,omitempty" json:"margin_rate,omitempty" xml:"margin_rate,omitempty"`
	// 最終更新日時
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
}

// CanEntryResponseBody is the type of the "balance" service "canEntry"
// endpoint HTTP response body.
type CanEntryResponseBody struct {
	// エントリー可能かどうかのフラグ
	CanEntry *bool `form:"can_entry,omitempty" json:"can_entry,omitempty" xml:"can_entry,omitempty"`
	// エントリー判断時点の買付余力
	BuyingPower *float64 `form:"buying_power,omitempty" json:"buying_power,omitempty" xml:"buying_power,omitempty"`
}

// NewSummaryStockBalanceSummaryOK builds a "balance" service "summary"
// endpoint result from a HTTP "OK" response.
func NewSummaryStockBalanceSummaryOK(body *SummaryResponseBody) *balanceviews.StockBalanceSummaryView {
	v := &balanceviews.StockBalanceSummaryView{
		TotalAssets:              body.TotalAssets,
		CashBuyingPower:          body.CashBuyingPower,
		MarginBuyingPower:        body.MarginBuyingPower,
		WithdrawalPossibleAmount: body.WithdrawalPossibleAmount,
		MarginRate:               body.MarginRate,
		UpdatedAt:                body.UpdatedAt,
	}

	return v
}

// NewCanEntryStockBalanceCanEntryOK builds a "balance" service "canEntry"
// endpoint result from a HTTP "OK" response.
func NewCanEntryStockBalanceCanEntryOK(body *CanEntryResponseBody) *balanceviews.StockBalanceCanEntryView {
	v := &balanceviews.StockBalanceCanEntryView{
		CanEntry:    body.CanEntry,
		BuyingPower: body.BuyingPower,
	}

	return v
}
