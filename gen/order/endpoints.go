// Code generated by goa v3.22.1, DO NOT EDIT.
//
// order endpoints
//
// Command:
// $ goa gen stock-bot/design

package order

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "order" service endpoints.
type Endpoints struct {
	NewOrder goa.Endpoint
}

// NewEndpoints wraps the methods of the "order" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		NewOrder: NewNewOrderEndpoint(s),
	}
}

// Use applies the given middleware to all the "order" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.NewOrder = m(e.NewOrder)
}

// NewNewOrderEndpoint returns an endpoint function that calls the method
// "newOrder" of service "order".
func NewNewOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*NewOrderPayload)
		res, err := s.NewOrder(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedStockOrder(res, "default")
		return vres, nil
	}
}
