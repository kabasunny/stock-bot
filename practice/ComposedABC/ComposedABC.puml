@startuml
package ComposedABC {

  interface InterfaceABC {
    {field} InterfaceA
    {field} InterfaceB
    {field} InterfaceC
  }

  interface InterfaceA {
    MethodA() string
  }

  interface InterfaceB {
    MethodB() string
  }

  interface InterfaceC {
    MethodC() string
  }

  struct ImplementationA {
    MethodA() string
  }

  struct ImplementationB {
    MethodB() string
  }

  struct ImplementationC {
    MethodC() string
  }

  struct ComposedABC {
    {field} a InterfaceA
    {field} b InterfaceB
    {field} c InterfaceC
    MethodA() string
    MethodB() string
    MethodC() string
  }

  InterfaceABC ..> InterfaceA : depends on
  InterfaceABC ..> InterfaceB : depends on
  InterfaceABC ..> InterfaceC : depends on

  ImplementationA --|> InterfaceA : implements
  ImplementationB --|> InterfaceB : implements
  ImplementationC --|> InterfaceC : implements

  ComposedABC -- InterfaceA : has
  ComposedABC -- InterfaceB : has
  ComposedABC -- InterfaceC : has

  ComposedABC --|> InterfaceABC : implements

}
@enduml